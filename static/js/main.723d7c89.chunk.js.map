{"version":3,"sources":["components/Login.js","is-empty.js","components/Quiz.js","components/Home.js","components/QuizInstructions.js","App.js","serviceWorker.js","index.js"],"names":["Login","isEmpty","value","undefined","Object","keys","length","trim","Quiz","state","questions","currentQuestion","nextQuestion","previousQuestion","answer","numberOfAnsweredQuestion","currentQuestionIndex","score","correctAnswers","wrongAnswers","nextButtonDisabled","previousButtonDisabled","time","displayQuestions","setState","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctAnswer","wrongAnswer","showAlert","withReactContent","Swal","fire","icon","title","confirmButtonText","handleNextButtonClick","prevState","handlePreviousButtonClick","endQuiz","setTimeout","props","history","push","this","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","Math","floor","seconds","clearInterval","alert","console","log","Helmet","className","question","onClick","optionA","optionB","optionC","optionD","id","React","Component","Home","to","QuizInstructions","App","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.723d7c89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../App.css\";\r\n\r\nfunction Login() {\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<h3>Login component</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","const isEmpty = (value) =>\r\n\tvalue === undefined ||\r\n\tvalue == null ||\r\n\t(typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n\t(typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { isCompositeComponentWithType } from \"react-dom/test-utils\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport questions from \"./../questions.json\";\r\nimport isEmpty from \"./../is-empty.js\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nclass Quiz extends React.Component {\r\n\tstate = {\r\n\t\tquestions,\r\n\t\tcurrentQuestion: {},\r\n\t\tnextQuestion: {},\r\n\t\tpreviousQuestion: {},\r\n\t\tanswer: \"\",\r\n\t\tnumberOfAnsweredQuestion: 0,\r\n\t\tcurrentQuestionIndex: 0,\r\n\t\tscore: 0,\r\n\t\tcorrectAnswers: 0,\r\n\t\twrongAnswers: 0,\r\n\t\tnextButtonDisabled: false,\r\n\t\tpreviousButtonDisabled: true,\r\n\t\ttime: {},\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tconst {\r\n\t\t\tquestions,\r\n\t\t\tcurrentQuestion,\r\n\t\t\tnextQuestion,\r\n\t\t\tpreviousQuestion,\r\n\t\t} = this.state;\r\n\t\tthis.displayQuestions(\r\n\t\t\tquestions,\r\n\t\t\tcurrentQuestion,\r\n\t\t\tnextQuestion,\r\n\t\t\tpreviousQuestion\r\n\t\t);\r\n\t\tthis.startTimer();\r\n\t}\r\n\t//Displaying all quiz question\r\n\tdisplayQuestions = (\r\n\t\tquestions = this.state.questions,\r\n\t\tcurrentQuestion,\r\n\t\tnextQuestion,\r\n\t\tpreviousQuestion\r\n\t) => {\r\n\t\tlet { currentQuestionIndex } = this.state;\r\n\t\tif (!isEmpty(this.state.questions)) {\r\n\t\t\tquestions = this.state.questions;\r\n\t\t\tcurrentQuestion = questions[currentQuestionIndex];\r\n\t\t\tnextQuestion = questions[currentQuestionIndex + 1];\r\n\t\t\tpreviousQuestion = questions[currentQuestionIndex - 1];\r\n\t\t\tconst answer = currentQuestion.answer;\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tcurrentQuestion,\r\n\t\t\t\t\tnextQuestion,\r\n\t\t\t\t\tpreviousQuestion,\r\n\t\t\t\t\tanswer,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.handleDisableButton();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\t// Handle Answer/ Option Button click\r\n\thandleOptionClick = (e) => {\r\n\t\tif (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n\t\t\tthis.correctAnswer();\r\n\t\t} else {\r\n\t\t\tthis.wrongAnswer();\r\n\t\t}\r\n\t};\r\n\tshowAlert = () => {\r\n\t\tconst MySwal = withReactContent(Swal);\r\n\r\n\t\treturn MySwal.fire({\r\n\t\t\ticon: \"success\",\r\n\t\t\ttitle: \"Answer Taken\",\r\n\t\t\tconfirmButtonText: \"Sure\",\r\n\t\t});\r\n\t};\r\n\t//Handle next button\r\n\thandleNextButtonClick = (e) => {\r\n\t\tif (this.state.nextQuestion !== undefined) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t(prevState) => ({\r\n\t\t\t\t\tcurrentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n\t\t\t\t}),\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.displayQuestions(\r\n\t\t\t\t\t\tthis.state.state,\r\n\t\t\t\t\t\tthis.state.currentQuestion,\r\n\t\t\t\t\t\tthis.state.nextQuestion,\r\n\t\t\t\t\t\tthis.state.previousQuestion\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\t//Handle previous button\r\n\thandlePreviousButtonClick = (e) => {\r\n\t\tif (this.state.previousQuestion !== undefined) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t(prevState) => ({\r\n\t\t\t\t\tcurrentQuestionIndex: prevState.currentQuestionIndex - 1,\r\n\t\t\t\t}),\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.displayQuestions(\r\n\t\t\t\t\t\tthis.state.state,\r\n\t\t\t\t\t\tthis.state.currentQuestion,\r\n\t\t\t\t\t\tthis.state.nextQuestion,\r\n\t\t\t\t\t\tthis.state.previousQuestion\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\t//Handle Quit Button\r\n\t//handleQuitButtonClick = (e) => {}\r\n\r\n\t//Disabling previous and next button when necessary\r\n\thandleDisableButton = () => {\r\n\t\t//For previous button\r\n\t\tif (\r\n\t\t\tthis.state.previousQuestion === undefined ||\r\n\t\t\tthis.state.currentQuestionIndex === 0\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpreviousButtonDisabled: true,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpreviousButtonDisabled: false,\r\n\t\t\t});\r\n\t\t}\r\n\t\t//For Next button\r\n\t\tif (\r\n\t\t\tthis.state.nextQuestion === undefined ||\r\n\t\t\tthis.state.currentQuestionIndex + 1 === 15\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnextButtonDisabled: true,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnextButtonDisabled: false,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t//Function for selecting correct answer\r\n\tcorrectAnswer = () => {\r\n\t\tconst MySwal = withReactContent(Swal);\r\n\t\t//return MySwal.fire(<p>Shorthand works too</p>);\r\n\t\tMySwal.fire({\r\n\t\t\ticon: \"success\",\r\n\t\t\ttitle: \"Answer is Correct\",\r\n\t\t\tconfirmButtonText: \"Okay\",\r\n\t\t});\r\n\t\tthis.setState(\r\n\t\t\t(prevState) => ({\r\n\t\t\t\tscore: prevState.score + 1,\r\n\t\t\t\tcorrectAnswers: prevState.correctAnswer + 1,\r\n\t\t\t\tcurrentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n\t\t\t\tnumberOfAnsweredQuestion: prevState.numberOfAnsweredQuestion + 1,\r\n\t\t\t}),\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.nextQuestion === undefined) {\r\n\t\t\t\t\tthis.endQuiz();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.displayQuestions(\r\n\t\t\t\t\t\tthis.state.questions,\r\n\t\t\t\t\t\tthis.state.currentQuestionIndex,\r\n\t\t\t\t\t\tthis.nextQuestion,\r\n\t\t\t\t\t\tthis.previousQuestion\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t//Function for selecting a wrong answer\r\n\twrongAnswer = () => {\r\n\t\tconst MySwal = withReactContent(Swal);\r\n\t\tMySwal.fire({\r\n\t\t\ticon: \"error\",\r\n\t\t\ttitle: \"Answer is Incorrect\",\r\n\t\t\tconfirmButtonText: \"Try Next\",\r\n\t\t});\r\n\t\tthis.setState(\r\n\t\t\t(prevState) => ({\r\n\t\t\t\twrongAnswers: prevState.wrongAnswers + 1,\r\n\t\t\t\tcurrentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n\t\t\t\tnumberOfAnsweredQuestion: prevState.numberOfAnsweredQuestion + 1,\r\n\t\t\t}),\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.nextQuestion === undefined) {\r\n\t\t\t\t\tthis.endQuiz();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.displayQuestions(\r\n\t\t\t\t\t\tthis.state.questions,\r\n\t\t\t\t\t\tthis.state.currentQuestionIndex,\r\n\t\t\t\t\t\tthis.nextQuestion,\r\n\t\t\t\t\t\tthis.previousQuestion\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t//Timer of the quiz\r\n\tstartTimer() {\r\n\t\tconst countDownTime = Date.now() + 150000;\r\n\t\tthis.interval = setInterval(() => {\r\n\t\t\tconst now = new Date();\r\n\t\t\tconst distance = countDownTime - now;\r\n\r\n\t\t\tconst minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n\t\t\tconst seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n\t\t\tif (distance < 0) {\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tthis.setState(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttime: {\r\n\t\t\t\t\t\t\tminutes: 0,\r\n\t\t\t\t\t\t\tseconds: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\talert(\"Quiz has ended\");\r\n\t\t\t\t\t\tthis.props.history.push(\"/\");\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttime: {\r\n\t\t\t\t\t\tminutes,\r\n\t\t\t\t\t\tseconds,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tendQuiz = () => {\r\n\t\tconst MySwal = withReactContent(Swal);\r\n\t\tMySwal.fire({\r\n\t\t\ttitle: \"The Quiz is finished! Well Done!\",\r\n\t\t});\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.history.push(\"/play/instructions\");\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(questions);\r\n\t\tconst {\r\n\t\t\tcurrentQuestion,\r\n\t\t\tcurrentQuestionIndex,\r\n\t\t\ttime,\r\n\t\t\tpreviousButtonDisabled,\r\n\t\t\tnextButtonDisabled,\r\n\t\t} = this.state;\r\n\t\tconsole.log(currentQuestion);\r\n\t\t//console.log(this.state.currentQuestionIndex);\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>Quiz Page</title>{\" \"}\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"questions\">\r\n\t\t\t\t\t\t{/* Countdown Timer */}\r\n\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t{time.minutes}:{time.seconds}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t{currentQuestionIndex + 1}. {currentQuestion.question}\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<div className=\"options-container\">\r\n\t\t\t\t\t\t\t<p onClick={this.handleOptionClick} className=\"option\">\r\n\t\t\t\t\t\t\t\t{currentQuestion.optionA}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p onClick={this.handleOptionClick} className=\"option\">\r\n\t\t\t\t\t\t\t\t{currentQuestion.optionB}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"options-container\">\r\n\t\t\t\t\t\t\t<p onClick={this.handleOptionClick} className=\"option\">\r\n\t\t\t\t\t\t\t\t{currentQuestion.optionC}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p onClick={this.handleOptionClick} className=\"option\">\r\n\t\t\t\t\t\t\t\t{currentQuestion.optionD}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"button-container mt-3\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"preivous-btn\"\r\n\t\t\t\t\t\t\t\tonClick={this.handlePreviousButtonClick}\r\n\t\t\t\t\t\t\t\tclassName={`btn btn-secondary mr-2 ${\r\n\t\t\t\t\t\t\t\t\tpreviousButtonDisabled ? \"disable\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPrevious\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"next-btn\"\r\n\t\t\t\t\t\t\t\tonClick={this.handleNextButtonClick}\r\n\t\t\t\t\t\t\t\tclassName={`btn btn-success  mr-2 ${\r\n\t\t\t\t\t\t\t\t\tnextButtonDisabled ? \"disable\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button id=\"quit-btn\" className=\"btn btn-danger mr-2\">\r\n\t\t\t\t\t\t\t\tQuit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./../App.css\";\r\n\r\nconst Home = () => (\r\n\t<Fragment>\r\n\t\t<Helmet>\r\n\t\t\t{\" \"}\r\n\t\t\t<title>Quiz App - Home</title>{\" \"}\r\n\t\t</Helmet>\r\n\r\n\t\t<div className=\"home\">\r\n\t\t\t<h1 className=\"text-center mt-5\">Quiz App</h1>\r\n\r\n\t\t\t<Link to=\"/play/instructions\">\r\n\t\t\t\t<button className=\"btn btn-primary ml-5\">Play</button>\r\n\t\t\t</Link>\r\n\t\t\t<Link to=\"/login\">\r\n\t\t\t\t<button className=\"btn btn-info ml-5\">Login</button>\r\n\t\t\t</Link>\r\n\t\t\t<Link to=\"/register\">\r\n\t\t\t\t<button className=\"btn btn-secondary ml-5\">Sign Up</button>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t</Fragment>\r\n);\r\n\r\nexport default Home;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst QuizInstructions = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Quiz Instructions - Quiz App</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<h1 className=\"text-center mt-5\">Play a simple quiz</h1>\r\n\t\t\t\t<h3 className=\"text-center mt-5\">There are no instructions actually</h3>\r\n\t\t\t\t<Link to=\"/play/quiz\">\r\n\t\t\t\t\t<button className=\"btn btn-outline-success mr-2\">\r\n\t\t\t\t\t\tTake the quiz!\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<button className=\"btn btn-outline-secondary ml-2\">\r\n\t\t\t\t\t\tTake me back\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default QuizInstructions;\r\n","import React, { useState } from \"react\";\n\n//Importing CSS\nimport \"./App.css\";\n\n//Importing Components\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Quiz from \"./components/Quiz\";\nimport AddQuiz from \"./components/AddQuiz\";\nimport Home from \"./components/Home\";\nimport QuizInstructions from \"./components/QuizInstructions\";\n\n//Importing from react router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\treturn (\n\t\t/*\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t<Route exact path=\"/quiz\" component={Quiz} />\n\t\t\t\t\t<Route exact path=\"/add-quiz\" component={AddQuiz} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t\t*/\n\t\t<Router basename=\"/quiz-app\">\n\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t<Route path=\"/play/instructions\" exact component={QuizInstructions} />\n\t\t\t<Route path=\"/play/quiz\" exact component={Quiz} />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}